<?xml version="1.0" encoding="UTF-8"?>
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"><head><title>1 Page 1 | The Flick Gesture</title><link rel="stylesheet" href="css/book.css" type="text/css"/><script src="js/book.js"/><meta charset="UTF-8"/><meta name="EPB-UUID" content="BD3D3A9A-CA9F-49ED-8781-D1C4184A7964"/><meta name="viewport" content="width=1023.84px,height=2592px"/></head><body dir="ltr" onload="Body_onLoad()"><div class="body" style="white-space:pre; line-break:strict;"><p style="font-size:1px;"><span style="display:inline-block;position:absolute;left:54.0px;top:54.0px;width:915.8px;height:2557.4px;"><img src="images/image.png" alt="image.png" style="width:915.8px;height:2557.4px;"/></span></p><div style="overflow:hidden;position:absolute;left:54.0px;top:54.0px;width:915.8px;height:2557.4px;"><div style="position:absolute;left:4.0px;top:4.0px;width:428.7px;height:2549.0px;"><p class="p1 p2" style="position:absolute;left:0;top:0;">The Flick Gesture</p><p class="p3 p4 c1" style="position:absolute;left:0;top:71.0px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:93.0px;"><span class="c3">The ability to add custom gestures to an app is a </span></p><p class="p3 p5" style="position:absolute;left:0;top:116.0px;">wonderful and underutilized facet of modern User </p><p class="p3 p5" style="position:absolute;left:0;top:139.0px;">Interface design.  Apple has a great set of </p><p class="p3 p5 c1" style="position:absolute;left:0;top:162.0px;"><span class="c3">concrete subclasses to its </span><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer"><span class="c3 c4">UIGestureRecognizer</span></a><span class="c3"> </span></p><p class="p3 p5" style="position:absolute;left:0;top:185.0px;">UIKit class:</p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:208.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uitapgesturerecognizer"><span class="c6 c7">UITapGestureRecognizer</span></a></p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:231.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uipinchgesturerecognizer"><span class="c6 c7">UIPinchGestureRecognizer</span></a></p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:254.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uirotationgesturerecognizer"><span class="c6 c7">UIRotationGestureRecognizer</span></a></p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:277.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uiswipegesturerecognizer"><span class="c6 c7">UISwipeGestureRecognizer</span></a></p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:300.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uipangesturerecognizer"><span class="c6 c7">UIPanGestureRecognizer</span></a></p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:323.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uiscreenedgepangesturerecognizer"><span class="c6 c7">UIScreenEdgePanGestureRecognizer</span></a></p><p class="p3 p6 c1" style="position:absolute;left:9.0px;top:346.0px;"><span class="c5"><bdi>•</bdi></span><span style="display:inline-block;width:26.6px;height:1.0px;"/><a href="https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer"><span class="c6 c7">UILongPressGestureRecognizer</span></a></p><p class="p3 p5 c1" style="position:absolute;left:0;top:369.0px;"> </p><p class="p3 p5" style="position:absolute;left:0;top:392.0px;">I needed something like the Swipe gesture above, </p><p class="p3 p5" style="position:absolute;left:0;top:415.0px;">but shorter and faster — a Flick gesture.  Clients </p><p class="p3 p5" style="position:absolute;left:0;top:438.0px;">could use this new gesture to commit quick </p><p class="p3 p5" style="position:absolute;left:0;top:461.0px;">updates to the UI; for example, undo/redo:</p><p class="p3 p5 c1" style="position:absolute;left:0;top:484.0px;"> </p><p class="p3 p7" style="position:absolute;left:0;top:507.0px;">Is the Swipe gesture not good enough for this?</p><p class="p3 p5" style="position:absolute;left:0;top:534.0px;">It's not.  The Swipe gesture is better suited for  </p><p class="p3 p5" style="position:absolute;left:0;top:557.0px;">transitioning Users from the current view to an </p><p class="p3 p5" style="position:absolute;left:0;top:580.0px;">adjacent view.  Relative to a Flick, a Swipe takes a  </p><p class="p3 p5" style="position:absolute;left:0;top:603.0px;">long time to recognize itself as a gesture; this extra </p><p class="p3 p5" style="position:absolute;left:0;top:626.0px;">time works well for view transitions because it </p><p class="p3 p5" style="position:absolute;left:0;top:649.0px;">allows Users enough time to realize that the </p><p class="p3 p5" style="position:absolute;left:0;top:672.0px;">current view is about to change — perhaps to an </p><p class="p3 p5" style="position:absolute;left:0;top:695.0px;">entirely new view.  </p><p class="p3 p5" style="position:absolute;left:0;top:718.0px;">My use-case relies on Users understanding, </p><p class="p3 p5" style="position:absolute;left:0;top:741.0px;">ahead of time, what changes will occur to their </p><p class="p3 p5" style="position:absolute;left:0;top:764.0px;">environment, once they perform the gesture.  The </p><p class="p3 p5" style="position:absolute;left:0;top:787.0px;">speed with which the gesture must be enacted </p><p class="p3 p5" style="position:absolute;left:0;top:810.0px;">also expresses the certainty a User has in wanting </p><p class="p3 p5" style="position:absolute;left:0;top:833.0px;">to commit to the action.  </p><p class="p3 p5" style="position:absolute;left:0;top:856.0px;">Also, using the Swipe gesture for something like </p><p class="p3 p5" style="position:absolute;left:0;top:879.0px;">undo/redo would lead to lots of UI </p><p class="p3 p5" style="position:absolute;left:0;top:902.0px;">misunderstandings — especially for something like </p><p class="p3 p5" style="position:absolute;left:0;top:925.0px;">an  Pencil app, where Users' hands frequently </p><p class="p3 p5" style="position:absolute;left:0;top:948.0px;">sweep across the surface of the screen as they </p><p class="p3 p5" style="position:absolute;left:0;top:971.0px;">draw.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:994.0px;"> </p><p class="p3 p7" style="position:absolute;left:0;top:1017.0px;">Parameters of a Flick</p><p class="p3 p5" style="position:absolute;left:0;top:1044.0px;">The process by which iOS recognizes a gesture </p><p class="p3 p5" style="position:absolute;left:0;top:1067.0px;">among a group of gestures in a responding view </p><p class="p3 p5" style="position:absolute;left:0;top:1090.0px;">is, first, developer-supplied priorities, and then a </p><p class="p3 p5" style="position:absolute;left:0;top:1113.0px;">set of qualifying conditions for recognition provided </p><p class="p3 p5" style="position:absolute;left:0;top:1136.0px;">by the gesture's implementation.  The Flick </p><p class="p3 p5" style="position:absolute;left:0;top:1159.0px;">gesture asserts that any Swipe, Pan, and any </p><p class="p3 p5" style="position:absolute;left:0;top:1182.0px;">other Flick gestures on associated with a  </p><p class="p3 p5" style="position:absolute;left:0;top:1205.0px;">responding view must wait behind the current Flick </p><p class="p3 p5" style="position:absolute;left:0;top:1228.0px;">gesture's attempt to recognize itself; on failure, </p><p class="p3 p5" style="position:absolute;left:0;top:1251.0px;">other Flick gestures are prioritized.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:1274.0px;"><span class="c3">This is accomplished via a protocol method:</span><span class="c3 c9">  </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:1297.0px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate"><span class="c3 c7">UIGestureRecognizerDelegate</span></a></p><p class="p3 p8" style="position:absolute;left:0;top:1320.0px;">    </p><p class="p3 p9 c1" style="position:absolute;left:0;top:1342.0px;"><span class="c10">    </span><span class="c10 c11">override</span><span class="c10"> func shouldBeRequiredToFail (</span></p><p class="p3 p9 c1" style="position:absolute;left:0;top:1357.0px;"><span class="c10">        by otherGestureRecognizer: </span><span class="c10 c11">UIGestureRecognizer</span></p><p class="p3 p9 c1" style="position:absolute;left:0;top:1372.0px;"><span class="c10">    ) -&gt; </span><span class="c10 c11">Bool</span></p><p class="p3 p9" style="position:absolute;left:0;top:1387.0px;">    {</p><p class="p3 p9 c1" style="position:absolute;left:0;top:1402.0px;"><span class="c10">        </span><span class="c10 c11">switch</span><span class="c10"> otherGestureRecognizer {</span></p><p class="p3 p9 c1" style="position:absolute;left:0;top:1417.0px;"><span class="c10">            </span><span class="c10 c11">case is</span><span class="c10"> FlickGestureRecognizer:</span></p><p class="p3 p9" style="position:absolute;left:0;top:1432.0px;">                break</p><p class="p3 p9 c1" style="position:absolute;left:0;top:1447.0px;"><span class="c10">            </span><span class="c10 c11">case is</span><span class="c10"> UIPanGestureRecognizer:</span></p><p class="p3 p9" style="position:absolute;left:0;top:1462.0px;">                break</p><p class="p3 p9 c1" style="position:absolute;left:0;top:1477.0px;"><span class="c10">            </span><span class="c10 c11">case is</span><span class="c10"> UISwipeGestureRecognizer:</span></p><p class="p3 p9" style="position:absolute;left:0;top:1492.0px;">                break</p><p class="p3 p9 c1" style="position:absolute;left:0;top:1507.0px;"><span class="c10">            </span><span class="c10 c11">default</span><span class="c10">:</span></p><p class="p3 p9 c1" style="position:absolute;left:0;top:1522.0px;"><span class="c10">                </span><span class="c10 c11">return</span><span class="c10"> false</span></p><p class="p3 p9" style="position:absolute;left:0;top:1537.0px;">        }</p><p class="p3 p9" style="position:absolute;left:0;top:1552.0px;">    </p><p class="p3 p9 c1" style="position:absolute;left:0;top:1567.0px;"><span class="c10">        </span><span class="c10 c11">return</span><span class="c10"> true</span></p><p class="p3 p9" style="position:absolute;left:0;top:1582.0px;">    }</p><p class="p3 p8 c1" style="position:absolute;left:0;top:1597.0px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1619.0px;"><span class="c3">Confronted with what might be a recognizable </span></p><p class="p3 p5" style="position:absolute;left:0;top:1642.0px;">gesture, each of the gestures for which a </p><p class="p3 p5" style="position:absolute;left:0;top:1665.0px;">responding view has a record is checked for an </p><p class="p3 p5" style="position:absolute;left:0;top:1688.0px;">implementation of the above delegate method.  If a </p><p class="p3 p5" style="position:absolute;left:0;top:1711.0px;">Flick gesture recognizes itself, the other gestures </p><p class="p3 p5" style="position:absolute;left:0;top:1734.0px;">that were made to wait, are cancelled.  Notice the </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1757.0px;"><span class="c3">default case above returns </span><span class="c3 c12">false</span><span class="c3"> to allow gestures </span></p><p class="p3 p5" style="position:absolute;left:0;top:1780.0px;">that look nothing like a Flick to go ahead unabated </p><p class="p3 p5" style="position:absolute;left:0;top:1803.0px;">— like a Tap gestures, for example.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:1826.0px;"> </p><p class="p3 p7 c1" style="position:absolute;left:0;top:1849.0px;"><span class="c3">Why might a Flick gesture fail?</span></p><p class="p3 p5" style="position:absolute;left:0;top:1877.8px;">Reasons a Flick gesture should fail are the </p><p class="p3 p5" style="position:absolute;left:0;top:1900.8px;">following:</p><p class="p3 p10 c1" style="position:absolute;left:0;top:1919.2px;"><span class="c14"><bdi>⁃</bdi></span><span style="display:inline-block;width:25.7px;height:1.0px;"/><span class="c3">the gesture was too slow to be a Flick,</span></p><p class="p3 p10 c1" style="position:absolute;left:0;top:1942.2px;"><span class="c14"><bdi>⁃</bdi></span><span style="display:inline-block;width:25.7px;height:1.0px;"/><span class="c3">the gesture was too short to be Flick — it could </span></p><p class="p3 p5" style="position:absolute;left:33.2px;top:1969.8px;">be a Tap gesture, or</p><p class="p3 p10 c1" style="position:absolute;left:0;top:1988.2px;"><span class="c14"><bdi>⁃</bdi></span><span style="display:inline-block;width:25.7px;height:1.0px;"/><span class="c3">the gesture was in a direction for which the </span></p><p class="p3 p5" style="position:absolute;left:33.2px;top:2015.8px;">Flick gesture has no associated action.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:2038.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2061.8px;"><span class="c3">Exactly what is fast enough to be a Flick is </span></p><p class="p3 p5" style="position:absolute;left:0;top:2084.8px;">adjudicated by the time between the </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2107.8px;"><span class="c3 c12">touchesBegan</span><span class="c3"> and the </span><span class="c3 c12">touchesEnded</span><span class="c3"> gesture </span></p><p class="p3 p5" style="position:absolute;left:0;top:2130.8px;">states.  The timing method needed to accomplish </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2153.8px;"><span class="c3">this is provided by the </span><a href="https://developer.apple.com/documentation/dispatch/dispatchtime"><span class="c3 c7">struct DispatchTime</span></a><span class="c3"> facility </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:2176.8px;"><span class="c3">within Apple's </span><span class="c3 c9">Dispatch</span><span class="c3"> Framework:</span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:2199.8px;"> </p><p class="p3 p9 c1" style="position:absolute;left:0;top:2222.8px;"><span class="c10">   </span><span class="c10 c11">let</span><span class="c10"> beganTime : </span><span class="c10 c11">UInt64</span><span class="c10"> = </span><span class="c10 c11">DispatchTime</span><span class="c10">.now()</span></p><p class="p3 p9" style="position:absolute;left:0;top:2237.8px;">   .uptimeNanoseconds</p><p class="p3 p5 c1" style="position:absolute;left:0;top:2252.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2275.8px;"><span class="c3">The maximum allowed time is set as </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:2298.8px;"><span class="c3 c9">UInt64</span><span class="c3">( 1.8e8) — 1 800 000 000 nanoseconds.</span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:2321.8px;"> </p><p class="p3 p5" style="position:absolute;left:0;top:2344.8px;">Exactly what is short enough, but not too short, is </p><p class="p3 p5" style="position:absolute;left:0;top:2367.8px;">adjudicated by testing the distance that a gesture </p><p class="p3 p5" style="position:absolute;left:0;top:2390.8px;">travels, against a closed range:</p><p class="p3 p11 c1" style="position:absolute;left:0;top:2413.8px;"> </p><p class="p3 p12 c1" style="position:absolute;left:0;top:2429.8px;"><span class="c10 c15">   </span><span class="c10">let</span><span class="c10 c15"> flickRange : </span><span class="c10">ClosedRange&lt;CGFloat&gt;</span><span class="c10 c15"> = 40.0...90.0</span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:2444.8px;"> </p><p class="p3 p7 c1" style="position:absolute;left:0;top:2467.8px;"> </p><p class="p3 p7 c1" style="position:absolute;left:0;top:2500.5px;"> </p></div><div style="position:absolute;left:483.1px;top:4.0px;width:428.7px;height:2549.0px;"><p class="p3 p7" style="position:absolute;left:0;top:0;">Gesture Subclasses are a Special Case</p><p class="p3 p5" style="position:absolute;left:0;top:32.8px;">Those having never ventured into this area of UIKit </p><p class="p3 p5" style="position:absolute;left:0;top:55.8px;">need some extra orientation regarding subclassing </p><p class="p3 p5" style="position:absolute;left:0;top:78.8px;">UIGestureRecognizer.  Creating a </p><p class="p3 p5" style="position:absolute;left:0;top:101.8px;">UIGestureRecognizer subclass requires a special </p><p class="p3 p5" style="position:absolute;left:0;top:124.8px;">header:</p><p class="p3 p8 c1" style="position:absolute;left:0;top:147.8px;"> </p><p class="p3 p9 c1" style="position:absolute;left:0;top:169.8px;"><span class="c10">    </span><span class="c10 c11">import</span><span class="c10"> UIKit.UIGestureRecognizerSubclass</span></p><p class="p3 p8 c1" style="position:absolute;left:0;top:184.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:206.8px;"><span class="c3">With that, the subclass gains access to </span><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer#1658520"><span class="c3 c7">Methods </span></a></p><p class="p3 p5 c1" style="position:absolute;left:0;top:229.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer#1658520"><span class="c3 c7">for Subclasses</span></a><span class="c3"> — a group of UITouch event </span></p><p class="p3 p5" style="position:absolute;left:0;top:252.8px;">tracking methods and a read-write redeclaration of </p><p class="p3 p5 c1" style="position:absolute;left:0;top:275.8px;"><span class="c3">UIGestureRecognizer's </span><span class="c3 c12">state</span><span class="c3"> variable.  Subclasses </span></p><p class="p3 p5" style="position:absolute;left:0;top:298.8px;">must manually update the gesture's state machine </p><p class="p3 p5 c1" style="position:absolute;left:0;top:321.8px;"><span class="c3">along the path to recognition</span><span class="c3 c12">.  </span><span class="c3">The state machine </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:344.8px;"><span class="c3">begins in the </span><span class="c3 c12">.possible</span><span class="c3"> state; if the recognition </span></p><p class="p3 p5" style="position:absolute;left:0;top:367.8px;">attempt is allowed to move forward, the overridden </p><p class="p3 p5 c1" style="position:absolute;left:0;top:390.8px;"><span class="c3">implementation of </span><span class="c3 c12">touchesBegan </span><span class="c3">will be called; </span></p><p class="p3 p5" style="position:absolute;left:0;top:413.8px;">from Apple's Developer documentation:</p><p class="p3 p5 c1" style="position:absolute;left:0;top:436.8px;"> </p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:459.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620009-touchesbegan"><span class="c6 c7">func touchesBegan(Set&lt;UITouch&gt;, with: </span></a></p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:482.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620009-touchesbegan"><span class="c6 c7">UIEvent)</span></a></p><p class="p3 p5" style="position:absolute;left:64.0px;top:505.8px;">Sent to the gesture recognizer when one or </p><p class="p3 p5" style="position:absolute;left:64.0px;top:528.8px;">more fingers touch down in the associated </p><p class="p3 p5" style="position:absolute;left:64.0px;top:551.8px;">view.</p><p class="p3 p8 c1" style="position:absolute;left:0;top:574.8px;"> </p><p class="p3 p5" style="position:absolute;left:0;top:596.8px;">My implementation makes use of </p><p class="p3 p5" style="position:absolute;left:0;top:619.8px;">UISwipeGestureRecognizer.Direction.  I'm only </p><p class="p3 p5" style="position:absolute;left:0;top:642.8px;">interested in .left or .right for now; implementing </p><p class="p3 p5" style="position:absolute;left:0;top:665.8px;">the other directions is not a big deal, though:  </p><p class="p3 p14 c1" style="position:absolute;left:0;top:688.8px;"> </p><p class="p3 p15" style="position:absolute;left:0;top:702.8px;">    guard</p><p class="p3 p15" style="position:absolute;left:0;top:716.8px;">        self.direction == .left || self.direction == .right</p><p class="p3 p15" style="position:absolute;left:0;top:730.8px;">    else {</p><p class="p3 p15" style="position:absolute;left:0;top:744.8px;">        self.state = .failed</p><p class="p3 p15" style="position:absolute;left:0;top:758.8px;">        return</p><p class="p3 p15" style="position:absolute;left:0;top:772.8px;">    }</p><p class="p3 p8 c1" style="position:absolute;left:0;top:786.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:808.8px;"><span class="c3">Any Flick that is setup such that its </span><span class="c3 c12">.direction</span><span class="c3"> is </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:831.8px;"><span class="c3">something other than </span><span class="c3 c12">.left </span><span class="c3">or </span><span class="c3 c12">.right </span><span class="c3">goes straight to </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:854.8px;"><span class="c3 c12">state =</span><span class="c3"> </span><span class="c3 c12">.failed</span><span class="c3">; the overridden </span><span class="c3 c12">reset </span><span class="c3">method would </span></p><p class="p3 p5" style="position:absolute;left:0;top:877.8px;">be called soon thereafter to set this Flick gesture </p><p class="p3 p5" style="position:absolute;left:0;top:900.8px;">for the next attempt and quickly move-on to the </p><p class="p3 p5" style="position:absolute;left:0;top:923.8px;">next eligible gesture from this point.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:946.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:969.8px;"><span class="c3">If the state remains valid, though, I set </span><span class="c3 c12">beganTime</span><span class="c3"> </span></p><p class="p3 p5" style="position:absolute;left:0;top:992.8px;">as described above, record the initial position of </p><p class="p3 p5" style="position:absolute;left:0;top:1015.8px;">the gesture,</p><p class="p3 p11 c1" style="position:absolute;left:0;top:1038.8px;"> </p><p class="p3 p9" style="position:absolute;left:0;top:1054.8px;">    self.startx = touches.first!.location (</p><p class="p3 p9" style="position:absolute;left:0;top:1069.8px;">        in: self.view</p><p class="p3 p9" style="position:absolute;left:0;top:1084.8px;">    )</p><p class="p3 p9" style="position:absolute;left:0;top:1099.8px;">    .x</p><p class="p3 p5 c1" style="position:absolute;left:0;top:1114.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1137.8px;"><span class="c3">and move-on to Flick's </span><span class="c3 c12">touchesMoved </span><span class="c3">method:</span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:1160.8px;"> </p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:1183.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619996-touchesmoved"><span class="c6 c7">func touchesMoved(Set&lt;UITouch&gt;, with: </span></a></p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:1206.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1619996-touchesmoved"><span class="c6 c7">UIEvent)</span></a></p><p class="p3 p5" style="position:absolute;left:64.0px;top:1229.8px;">Sent to the gesture recognizer when one or </p><p class="p3 p5" style="position:absolute;left:64.0px;top:1252.8px;">more fingers move in the associated view.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:1275.8px;"><span class="c3">Checks on gesture speed and direction take place </span></p><p class="p3 p5" style="position:absolute;left:0;top:1298.8px;">here; again, any values found to be outside of the </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1321.8px;"><span class="c3">allowable thresholds sets </span><span class="c3 c12">state</span><span class="c3"> to </span><span class="c3 c12">.failed</span><span class="c3">.  It's </span></p><p class="p3 p5" style="position:absolute;left:0;top:1344.8px;">important to get these checks out of the way as </p><p class="p3 p5" style="position:absolute;left:0;top:1367.8px;">soon as possible so as not to unnecessarily </p><p class="p3 p5" style="position:absolute;left:0;top:1390.8px;">obstruct recognition of gestures that Users are </p><p class="p3 p5" style="position:absolute;left:0;top:1413.8px;">genuinely trying to convey.  </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1436.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1459.8px;"><span class="c3">If we have a valid Flick so far, when the User ends </span></p><p class="p3 p5" style="position:absolute;left:0;top:1482.8px;">the gesture, one more check on speed and </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1505.8px;"><span class="c3">distance is made at </span><span class="c3 c12">touchesEnded</span><span class="c3"> and, if all goes </span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:1528.8px;"><span class="c3">well, </span><span class="c3 c12">state</span><span class="c3"> is finally set to </span><span class="c3 c12">.recognized </span><span class="c3">.</span></p><p class="p3 p5 c1" style="position:absolute;left:0;top:1551.8px;"> </p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:1574.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620005-touchesended"><span class="c6 c7">func touchesEnded(Set&lt;UITouch&gt;, with: </span></a></p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:1597.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620005-touchesended"><span class="c6 c7">UIEvent)</span></a></p><p class="p3 p5" style="position:absolute;left:64.0px;top:1620.8px;">Sent to the gesture recognizer when one or </p><p class="p3 p5" style="position:absolute;left:64.0px;top:1643.8px;">more fingers lift from the associated view.</p><p class="p3 p5 c1" style="position:absolute;left:64.0px;top:1666.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1689.8px;"><span class="c3">Setting </span><span class="c3 c12">state</span><span class="c3"> to </span><span class="c3 c12">.recognized</span><span class="c3"> generates a call to the  </span></p><p class="p3 p5" style="position:absolute;left:0;top:1712.8px;">target-action pair meant to act on the User's </p><p class="p3 p5 c1" style="position:absolute;left:0;top:1735.8px;"><span class="c3">gesture, along with calls to the overridden </span><span class="c3 c12">reset</span><span class="c3"> </span></p><p class="p3 p5" style="position:absolute;left:0;top:1758.8px;">method.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:1781.8px;"> </p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:1804.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620004-reset"><span class="c6 c7">func reset()</span></a></p><p class="p3 p5" style="position:absolute;left:64.0px;top:1827.8px;">Overridden to reset internal state when a </p><p class="p3 p5" style="position:absolute;left:64.0px;top:1850.8px;">gesture recognition attempt completes.</p><p class="p3 p5 c1" style="position:absolute;left:64.0px;top:1873.8px;"> </p><p class="p3 p5" style="position:absolute;left:0;top:1896.8px;">Clear any state-based variables here and setup </p><p class="p3 p5" style="position:absolute;left:0;top:1919.8px;">the gesture for next time.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:1942.8px;"> </p><p class="p3 p5" style="position:absolute;left:0;top:1965.8px;">Other important overrides include the following, </p><p class="p3 p5" style="position:absolute;left:0;top:1988.8px;">see the source for more information on these:</p><p class="p3 p5 c1" style="position:absolute;left:0;top:2011.8px;"> </p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:2034.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620002-touchescancelled"><span class="c6 c7">func touchesCancelled(Set&lt;UITouch&gt;, </span></a></p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:2057.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620002-touchescancelled"><span class="c6 c7">with: UIEvent)</span></a></p><p class="p3 p5" style="position:absolute;left:64.0px;top:2080.8px;">Sent to the gesture recognizer when a </p><p class="p3 p5" style="position:absolute;left:64.0px;top:2103.8px;">system event (such as an incoming phone </p><p class="p3 p5" style="position:absolute;left:64.0px;top:2126.8px;">call) cancels a touch event.</p><p class="p3 p13 c16" style="position:absolute;left:64.0px;top:2149.8px;"><a href="https://developer.apple.com/documentation/uikit/uigesturerecognizer/1620010-ignore"><span class="c6 c7">func ignore(UITouch, for: UIEvent)</span></a></p><p class="p3 p5" style="position:absolute;left:64.0px;top:2172.8px;">Tells the gesture recognizer to ignore a </p><p class="p3 p5" style="position:absolute;left:64.0px;top:2195.8px;">specific touch of the given event.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:2218.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2241.8px;"><span class="c3">For more Apple Developer documentation </span></p><p class="p3 p5" style="position:absolute;left:0;top:2264.8px;">regarding custom gestures, start with Apple's </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2287.8px;"><span class="c3">Developer article, </span><a href="https://developer.apple.com/documentation/uikit/touches_presses_and_gestures/implementing_a_custom_gesture_recognizer"><span class="c3 c7">Implementing a Custom Gesture </span></a></p><p class="p3 p5 c1" style="position:absolute;left:0;top:2310.8px;"><a href="https://developer.apple.com/documentation/uikit/touches_presses_and_gestures/implementing_a_custom_gesture_recognizer"><span class="c3 c7">Recognizer</span></a><span class="c3">, for more information on creating your </span></p><p class="p3 p5" style="position:absolute;left:0;top:2333.8px;">own discrete or continuous gesture recognizers.</p><p class="p3 p5 c1" style="position:absolute;left:0;top:2356.8px;"> </p><p class="p3 p5 c1" style="position:absolute;left:0;top:2379.8px;"> </p><p class="p3 p16" style="position:absolute;left:0;top:2402.8px;">Last Updated:  6 March 2019</p><p class="p3 p17 c1" style="position:absolute;left:0;top:2421.8px;"> </p><p class="p3 p17 c1" style="position:absolute;left:0;top:2437.8px;"> </p><p class="p3 p17" style="position:absolute;left:0;top:2453.8px;">Copyright © Christopher Jason Browning</p><p class="p3 p17 c1" style="position:absolute;left:0;top:2469.8px;"><span class="c10">The content of this page is licensed under the </span><a href="https://creativecommons.org/licenses/by/3.0/"><span class="c10 c18">Creative Commons </span></a></p><p class="p3 p17 c1" style="position:absolute;left:0;top:2485.8px;"><a href="https://creativecommons.org/licenses/by/3.0/"><span class="c10 c18">Attribution 3.0 License</span></a><span class="c10">, and code samples are licensed under the </span><a href="http://www.apple.com"><span class="c19 c20">MIT </span></a></p><p class="p3 p17 c1" style="position:absolute;left:0;top:2501.8px;"><a href="http://www.apple.com"><span class="c19 c20">License</span></a><span class="c10">.</span></p></div></div></div></body></html>
